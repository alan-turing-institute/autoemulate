name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    name: Test on Python ${{ matrix.python-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Clean cache files
        run: |
          find . -type f -name "*.pyc" -delete
          find . -type d -name "__pycache__" -delete
          rm -f .coverage* coverage.xml
      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python -
      - name: Configure poetry
        run: poetry config virtualenvs.create false
      - name: Switch to CPU version of PyTorch
        run: |
          poetry remove torch
          poetry source add -p explicit pytorch https://download.pytorch.org/whl/cpu
          poetry add --source pytorch "torch==2.6.0"
      - name: Install dependencies
        run: poetry install
      - name: Verify PyTorch installation
        run: |
          poetry run python -c "import torch; print(torch.__version__); print('CUDA available:', torch.cuda.is_available())"
      - name: Debug Coverage Config
        run: |
          cat pyproject.toml
          poetry run coverage debug config
      - name: Run Tests with Coverage
        run: |
          poetry run coverage run --source=. --omit="v0/*" -m pytest
          poetry run coverage xml -i -o coverage.xml
        env:
          COVERAGE_FILE: ".coverage.${{ matrix.python-version }}"
      - name: Upload coverage file
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: .coverage.${{ matrix.python-version }}
          include-hidden-files: true
  coverage:
    name: Combine & Report Coverage
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies for coverage
        run: pip install coverage
      - name: Download all coverage artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true
      - name: Combine coverage data
        run: |
          ls -la
          coverage combine
          coverage report
          coverage xml
      - name: Upload merged coverage report
        uses: actions/upload-artifact@v4
        with:
          name: final-coverage-report
          path: coverage.xml
      - name: Comment coverage on PR
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_COVERAGE_FILES: true
      - name: Store comment for PR
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt